/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.Messages.AttestationMessage', null, global);
goog.exportSymbol('proto.Messages.InitialMessage', null, global);
goog.exportSymbol('proto.Messages.MessageMSG1', null, global);
goog.exportSymbol('proto.Messages.MessageMSG2', null, global);
goog.exportSymbol('proto.Messages.MessageMSG3', null, global);
goog.exportSymbol('proto.Messages.MessageMsg0', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.InitialMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Messages.InitialMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.InitialMessage.displayName = 'proto.Messages.InitialMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.InitialMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.InitialMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.InitialMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.InitialMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    size: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.InitialMessage}
 */
proto.Messages.InitialMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.InitialMessage;
  return proto.Messages.InitialMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.InitialMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.InitialMessage}
 */
proto.Messages.InitialMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.InitialMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.InitialMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.InitialMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.InitialMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * required uint32 type = 1;
 * @return {number}
 */
proto.Messages.InitialMessage.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.Messages.InitialMessage.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.InitialMessage.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.InitialMessage.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.Messages.InitialMessage.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.InitialMessage.prototype.setSize = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.InitialMessage.prototype.clearSize = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.InitialMessage.prototype.hasSize = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.MessageMsg0 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Messages.MessageMsg0, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.MessageMsg0.displayName = 'proto.Messages.MessageMsg0';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.MessageMsg0.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.MessageMsg0.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.MessageMsg0} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMsg0.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    epid: jspb.Message.getField(msg, 2),
    status: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.MessageMsg0}
 */
proto.Messages.MessageMsg0.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.MessageMsg0;
  return proto.Messages.MessageMsg0.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.MessageMsg0} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.MessageMsg0}
 */
proto.Messages.MessageMsg0.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEpid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.MessageMsg0.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.MessageMsg0.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.MessageMsg0} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMsg0.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * required uint32 type = 1;
 * @return {number}
 */
proto.Messages.MessageMsg0.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.Messages.MessageMsg0.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.MessageMsg0.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMsg0.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required uint32 epid = 2;
 * @return {number}
 */
proto.Messages.MessageMsg0.prototype.getEpid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.MessageMsg0.prototype.setEpid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.MessageMsg0.prototype.clearEpid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMsg0.prototype.hasEpid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 status = 3;
 * @return {number}
 */
proto.Messages.MessageMsg0.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Messages.MessageMsg0.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Messages.MessageMsg0.prototype.clearStatus = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMsg0.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.MessageMSG1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.MessageMSG1.repeatedFields_, null);
};
goog.inherits(proto.Messages.MessageMSG1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.MessageMSG1.displayName = 'proto.Messages.MessageMSG1';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.MessageMSG1.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.MessageMSG1.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.MessageMSG1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.MessageMSG1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMSG1.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    gaxList: jspb.Message.getRepeatedField(msg, 2),
    gayList: jspb.Message.getRepeatedField(msg, 3),
    gidList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.MessageMSG1}
 */
proto.Messages.MessageMSG1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.MessageMSG1;
  return proto.Messages.MessageMSG1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.MessageMSG1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.MessageMSG1}
 */
proto.Messages.MessageMSG1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setGaxList(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setGayList(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setGidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.MessageMSG1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.MessageMSG1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.MessageMSG1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMSG1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getGaxList();
  if (f.length > 0) {
    writer.writePackedUint32(
      2,
      f
    );
  }
  f = message.getGayList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getGidList();
  if (f.length > 0) {
    writer.writePackedUint32(
      4,
      f
    );
  }
};


/**
 * required uint32 type = 1;
 * @return {number}
 */
proto.Messages.MessageMSG1.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG1.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.MessageMSG1.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG1.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated uint32 GaX = 2;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG1.prototype.getGaxList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG1.prototype.setGaxList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG1.prototype.addGax = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.Messages.MessageMSG1.prototype.clearGaxList = function() {
  this.setGaxList([]);
};


/**
 * repeated uint32 GaY = 3;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG1.prototype.getGayList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG1.prototype.setGayList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG1.prototype.addGay = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.Messages.MessageMSG1.prototype.clearGayList = function() {
  this.setGayList([]);
};


/**
 * repeated uint32 GID = 4;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG1.prototype.getGidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG1.prototype.setGidList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG1.prototype.addGid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.Messages.MessageMSG1.prototype.clearGidList = function() {
  this.setGidList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.MessageMSG2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.MessageMSG2.repeatedFields_, null);
};
goog.inherits(proto.Messages.MessageMSG2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.MessageMSG2.displayName = 'proto.Messages.MessageMSG2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.MessageMSG2.repeatedFields_ = [3,4,6,8,9,10,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.MessageMSG2.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.MessageMSG2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.MessageMSG2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMSG2.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    size: jspb.Message.getField(msg, 2),
    publicKeyGxList: jspb.Message.getRepeatedField(msg, 3),
    publicKeyGyList: jspb.Message.getRepeatedField(msg, 4),
    quoteType: jspb.Message.getField(msg, 5),
    spidList: jspb.Message.getRepeatedField(msg, 6),
    cmacKdfId: jspb.Message.getField(msg, 7),
    signatureXList: jspb.Message.getRepeatedField(msg, 8),
    signatureYList: jspb.Message.getRepeatedField(msg, 9),
    smacList: jspb.Message.getRepeatedField(msg, 10),
    sizeSigrl: jspb.Message.getField(msg, 11),
    sigrlList: jspb.Message.getRepeatedField(msg, 12)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.MessageMSG2}
 */
proto.Messages.MessageMSG2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.MessageMSG2;
  return proto.Messages.MessageMSG2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.MessageMSG2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.MessageMSG2}
 */
proto.Messages.MessageMSG2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setPublicKeyGxList(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setPublicKeyGyList(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQuoteType(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setSpidList(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCmacKdfId(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setSignatureXList(value);
      break;
    case 9:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setSignatureYList(value);
      break;
    case 10:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setSmacList(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSizeSigrl(value);
      break;
    case 12:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setSigrlList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.MessageMSG2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.MessageMSG2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.MessageMSG2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMSG2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPublicKeyGxList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getPublicKeyGyList();
  if (f.length > 0) {
    writer.writePackedUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getSpidList();
  if (f.length > 0) {
    writer.writePackedUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getSignatureXList();
  if (f.length > 0) {
    writer.writePackedUint32(
      8,
      f
    );
  }
  f = message.getSignatureYList();
  if (f.length > 0) {
    writer.writePackedUint32(
      9,
      f
    );
  }
  f = message.getSmacList();
  if (f.length > 0) {
    writer.writePackedUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getSigrlList();
  if (f.length > 0) {
    writer.writePackedUint32(
      12,
      f
    );
  }
};


/**
 * required uint32 type = 1;
 * @return {number}
 */
proto.Messages.MessageMSG2.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG2.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.MessageMSG2.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG2.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.Messages.MessageMSG2.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG2.prototype.setSize = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.MessageMSG2.prototype.clearSize = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG2.prototype.hasSize = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated uint32 public_key_gx = 3;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getPublicKeyGxList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setPublicKeyGxList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addPublicKeyGx = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearPublicKeyGxList = function() {
  this.setPublicKeyGxList([]);
};


/**
 * repeated uint32 public_key_gy = 4;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getPublicKeyGyList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setPublicKeyGyList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addPublicKeyGy = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearPublicKeyGyList = function() {
  this.setPublicKeyGyList([]);
};


/**
 * optional uint32 quote_type = 5;
 * @return {number}
 */
proto.Messages.MessageMSG2.prototype.getQuoteType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG2.prototype.setQuoteType = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.Messages.MessageMSG2.prototype.clearQuoteType = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG2.prototype.hasQuoteType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated uint32 spid = 6;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getSpidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setSpidList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addSpid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearSpidList = function() {
  this.setSpidList([]);
};


/**
 * optional uint32 cmac_kdf_id = 7;
 * @return {number}
 */
proto.Messages.MessageMSG2.prototype.getCmacKdfId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG2.prototype.setCmacKdfId = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.Messages.MessageMSG2.prototype.clearCmacKdfId = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG2.prototype.hasCmacKdfId = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated uint32 signature_x = 8;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getSignatureXList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setSignatureXList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addSignatureX = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearSignatureXList = function() {
  this.setSignatureXList([]);
};


/**
 * repeated uint32 signature_y = 9;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getSignatureYList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setSignatureYList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addSignatureY = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearSignatureYList = function() {
  this.setSignatureYList([]);
};


/**
 * repeated uint32 smac = 10;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getSmacList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setSmacList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addSmac = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearSmacList = function() {
  this.setSmacList([]);
};


/**
 * optional uint32 size_sigrl = 11;
 * @return {number}
 */
proto.Messages.MessageMSG2.prototype.getSizeSigrl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG2.prototype.setSizeSigrl = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.Messages.MessageMSG2.prototype.clearSizeSigrl = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG2.prototype.hasSizeSigrl = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated uint32 sigrl = 12;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getSigrlList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setSigrlList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addSigrl = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearSigrlList = function() {
  this.setSigrlList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.MessageMSG3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.MessageMSG3.repeatedFields_, null);
};
goog.inherits(proto.Messages.MessageMSG3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.MessageMSG3.displayName = 'proto.Messages.MessageMSG3';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.MessageMSG3.repeatedFields_ = [3,4,5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.MessageMSG3.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.MessageMSG3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.MessageMSG3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMSG3.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    size: jspb.Message.getField(msg, 2),
    sgxMacList: jspb.Message.getRepeatedField(msg, 3),
    gaxMsg3List: jspb.Message.getRepeatedField(msg, 4),
    gayMsg3List: jspb.Message.getRepeatedField(msg, 5),
    secPropertyList: jspb.Message.getRepeatedField(msg, 6),
    quoteList: jspb.Message.getRepeatedField(msg, 7)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.MessageMSG3}
 */
proto.Messages.MessageMSG3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.MessageMSG3;
  return proto.Messages.MessageMSG3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.MessageMSG3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.MessageMSG3}
 */
proto.Messages.MessageMSG3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setSgxMacList(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setGaxMsg3List(value);
      break;
    case 5:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setGayMsg3List(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setSecPropertyList(value);
      break;
    case 7:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setQuoteList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.MessageMSG3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.MessageMSG3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.MessageMSG3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMSG3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSgxMacList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getGaxMsg3List();
  if (f.length > 0) {
    writer.writePackedUint32(
      4,
      f
    );
  }
  f = message.getGayMsg3List();
  if (f.length > 0) {
    writer.writePackedUint32(
      5,
      f
    );
  }
  f = message.getSecPropertyList();
  if (f.length > 0) {
    writer.writePackedUint32(
      6,
      f
    );
  }
  f = message.getQuoteList();
  if (f.length > 0) {
    writer.writePackedUint32(
      7,
      f
    );
  }
};


/**
 * required uint32 type = 1;
 * @return {number}
 */
proto.Messages.MessageMSG3.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG3.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.MessageMSG3.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG3.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.Messages.MessageMSG3.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG3.prototype.setSize = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.MessageMSG3.prototype.clearSize = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG3.prototype.hasSize = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated uint32 sgx_mac = 3;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG3.prototype.getSgxMacList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG3.prototype.setSgxMacList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG3.prototype.addSgxMac = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.Messages.MessageMSG3.prototype.clearSgxMacList = function() {
  this.setSgxMacList([]);
};


/**
 * repeated uint32 gax_msg3 = 4;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG3.prototype.getGaxMsg3List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG3.prototype.setGaxMsg3List = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG3.prototype.addGaxMsg3 = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.Messages.MessageMSG3.prototype.clearGaxMsg3List = function() {
  this.setGaxMsg3List([]);
};


/**
 * repeated uint32 gay_msg3 = 5;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG3.prototype.getGayMsg3List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG3.prototype.setGayMsg3List = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG3.prototype.addGayMsg3 = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.Messages.MessageMSG3.prototype.clearGayMsg3List = function() {
  this.setGayMsg3List([]);
};


/**
 * repeated uint32 sec_property = 6;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG3.prototype.getSecPropertyList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG3.prototype.setSecPropertyList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG3.prototype.addSecProperty = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.Messages.MessageMSG3.prototype.clearSecPropertyList = function() {
  this.setSecPropertyList([]);
};


/**
 * repeated uint32 quote = 7;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG3.prototype.getQuoteList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG3.prototype.setQuoteList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG3.prototype.addQuote = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.Messages.MessageMSG3.prototype.clearQuoteList = function() {
  this.setQuoteList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.AttestationMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.AttestationMessage.repeatedFields_, null);
};
goog.inherits(proto.Messages.AttestationMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.AttestationMessage.displayName = 'proto.Messages.AttestationMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.AttestationMessage.repeatedFields_ = [6,7,8,9,10,11,12,14,15,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Messages.AttestationMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Messages.AttestationMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Messages.AttestationMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.AttestationMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    size: jspb.Message.getField(msg, 2),
    epidGroupStatus: jspb.Message.getField(msg, 3),
    tcbEvaluationStatus: jspb.Message.getField(msg, 4),
    pseEvaluationStatus: jspb.Message.getField(msg, 5),
    latestEquivalentTcbPsvnList: jspb.Message.getRepeatedField(msg, 6),
    latestPseIsvsvnList: jspb.Message.getRepeatedField(msg, 7),
    latestPsdaSvnList: jspb.Message.getRepeatedField(msg, 8),
    performanceRekeyGidList: jspb.Message.getRepeatedField(msg, 9),
    ecSign256XList: jspb.Message.getRepeatedField(msg, 10),
    ecSign256YList: jspb.Message.getRepeatedField(msg, 11),
    macSmkList: jspb.Message.getRepeatedField(msg, 12),
    resultSize: jspb.Message.getField(msg, 13),
    reservedList: jspb.Message.getRepeatedField(msg, 14),
    payloadTagList: jspb.Message.getRepeatedField(msg, 15),
    payloadList: jspb.Message.getRepeatedField(msg, 16)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.AttestationMessage}
 */
proto.Messages.AttestationMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.AttestationMessage;
  return proto.Messages.AttestationMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.AttestationMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.AttestationMessage}
 */
proto.Messages.AttestationMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEpidGroupStatus(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTcbEvaluationStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPseEvaluationStatus(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setLatestEquivalentTcbPsvnList(value);
      break;
    case 7:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setLatestPseIsvsvnList(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setLatestPsdaSvnList(value);
      break;
    case 9:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setPerformanceRekeyGidList(value);
      break;
    case 10:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setEcSign256XList(value);
      break;
    case 11:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setEcSign256YList(value);
      break;
    case 12:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setMacSmkList(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResultSize(value);
      break;
    case 14:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setReservedList(value);
      break;
    case 15:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setPayloadTagList(value);
      break;
    case 16:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setPayloadList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.AttestationMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Messages.AttestationMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.AttestationMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.AttestationMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getLatestEquivalentTcbPsvnList();
  if (f.length > 0) {
    writer.writePackedUint32(
      6,
      f
    );
  }
  f = message.getLatestPseIsvsvnList();
  if (f.length > 0) {
    writer.writePackedUint32(
      7,
      f
    );
  }
  f = message.getLatestPsdaSvnList();
  if (f.length > 0) {
    writer.writePackedUint32(
      8,
      f
    );
  }
  f = message.getPerformanceRekeyGidList();
  if (f.length > 0) {
    writer.writePackedUint32(
      9,
      f
    );
  }
  f = message.getEcSign256XList();
  if (f.length > 0) {
    writer.writePackedUint32(
      10,
      f
    );
  }
  f = message.getEcSign256YList();
  if (f.length > 0) {
    writer.writePackedUint32(
      11,
      f
    );
  }
  f = message.getMacSmkList();
  if (f.length > 0) {
    writer.writePackedUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getReservedList();
  if (f.length > 0) {
    writer.writePackedUint32(
      14,
      f
    );
  }
  f = message.getPayloadTagList();
  if (f.length > 0) {
    writer.writePackedUint32(
      15,
      f
    );
  }
  f = message.getPayloadList();
  if (f.length > 0) {
    writer.writePackedUint32(
      16,
      f
    );
  }
};


/**
 * required uint32 type = 1;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.AttestationMessage.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required uint32 size = 2;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setSize = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.AttestationMessage.prototype.clearSize = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasSize = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 epid_group_status = 3;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getEpidGroupStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setEpidGroupStatus = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Messages.AttestationMessage.prototype.clearEpidGroupStatus = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasEpidGroupStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 tcb_evaluation_status = 4;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getTcbEvaluationStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setTcbEvaluationStatus = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.Messages.AttestationMessage.prototype.clearTcbEvaluationStatus = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasTcbEvaluationStatus = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 pse_evaluation_status = 5;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getPseEvaluationStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setPseEvaluationStatus = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.Messages.AttestationMessage.prototype.clearPseEvaluationStatus = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasPseEvaluationStatus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated uint32 latest_equivalent_tcb_psvn = 6;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getLatestEquivalentTcbPsvnList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setLatestEquivalentTcbPsvnList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addLatestEquivalentTcbPsvn = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearLatestEquivalentTcbPsvnList = function() {
  this.setLatestEquivalentTcbPsvnList([]);
};


/**
 * repeated uint32 latest_pse_isvsvn = 7;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getLatestPseIsvsvnList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setLatestPseIsvsvnList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addLatestPseIsvsvn = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearLatestPseIsvsvnList = function() {
  this.setLatestPseIsvsvnList([]);
};


/**
 * repeated uint32 latest_psda_svn = 8;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getLatestPsdaSvnList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setLatestPsdaSvnList = function(value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addLatestPsdaSvn = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearLatestPsdaSvnList = function() {
  this.setLatestPsdaSvnList([]);
};


/**
 * repeated uint32 performance_rekey_gid = 9;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getPerformanceRekeyGidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setPerformanceRekeyGidList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addPerformanceRekeyGid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearPerformanceRekeyGidList = function() {
  this.setPerformanceRekeyGidList([]);
};


/**
 * repeated uint32 ec_sign256_x = 10;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getEcSign256XList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setEcSign256XList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addEcSign256X = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearEcSign256XList = function() {
  this.setEcSign256XList([]);
};


/**
 * repeated uint32 ec_sign256_y = 11;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getEcSign256YList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setEcSign256YList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addEcSign256Y = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearEcSign256YList = function() {
  this.setEcSign256YList([]);
};


/**
 * repeated uint32 mac_smk = 12;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getMacSmkList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setMacSmkList = function(value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addMacSmk = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearMacSmkList = function() {
  this.setMacSmkList([]);
};


/**
 * optional uint32 result_size = 13;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getResultSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setResultSize = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.Messages.AttestationMessage.prototype.clearResultSize = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasResultSize = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated uint32 reserved = 14;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getReservedList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setReservedList = function(value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addReserved = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearReservedList = function() {
  this.setReservedList([]);
};


/**
 * repeated uint32 payload_tag = 15;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getPayloadTagList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 15));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setPayloadTagList = function(value) {
  jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addPayloadTag = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearPayloadTagList = function() {
  this.setPayloadTagList([]);
};


/**
 * repeated uint32 payload = 16;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getPayloadList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 16));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setPayloadList = function(value) {
  jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addPayload = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearPayloadList = function() {
  this.setPayloadList([]);
};


goog.object.extend(exports, proto.Messages);
